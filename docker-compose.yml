# Default Docker Compose configuration for local development
# For other environments, use:
# - Development: docker-compose -f deployment/docker-compose.dev.yml up
# - Staging: docker-compose -f deployment/docker-compose.staging.yml up  
# - Production: docker-compose -f deployment/production.yml up

version: '3.8'

services:
  # Main API service - Local Development
  rethinking-park-api:
    build: .
    container_name: rethinking-park-api-local
    ports:
      - "8000:8000"
    environment:
      # Application settings
      - APP_ENV=local
      - DEBUG=true
      - APP_NAME=Rethinking Park Backend API (Local)
      - APP_VERSION=dev
      
      # Google Cloud configuration
      - GOOGLE_CLOUD_PROJECT_ID=${GOOGLE_CLOUD_PROJECT_ID:-rethinking-park-local}
      - GOOGLE_CLOUD_STORAGE_BUCKET=${GOOGLE_CLOUD_STORAGE_BUCKET:-rethinking-park-images-local}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/service-account-key.json
      
      # Redis configuration (using host Redis for simplicity)
      - REDIS_ENABLED=true
      - REDIS_URL=redis://host.docker.internal:6379
      - CACHE_TTL_HOURS=1
      
      # Feature configuration (lenient for local development)
      - RATE_LIMIT_ENABLED=false
      - ENABLE_DUPLICATE_DETECTION=true
      - SIMILARITY_THRESHOLD=5
      
      # CORS configuration (permissive for local development)
      - ALLOWED_ORIGINS=*
    
    volumes:
      # Mount service account key file
      - "${PWD}/service-account-key.json:/app/service-account-key.json:ro"
      # Mount data storage directory
      - api_data:/app/data
      # Mount logs for debugging
      - "${PWD}/logs:/app/logs"
    
    extra_hosts:
      - "host.docker.internal:host-gateway"
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    
    restart: unless-stopped

volumes:
  api_data:
    driver: local

networks:
  default:
    name: rethinking-park-local-network
